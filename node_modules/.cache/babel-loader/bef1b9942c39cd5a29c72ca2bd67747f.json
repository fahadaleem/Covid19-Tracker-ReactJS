{"ast":null,"code":"import _regeneratorRuntime from\"/home/fahad/reactProjects/CovidTracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/fahad/reactProjects/CovidTracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/fahad/reactProjects/CovidTracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{createContext,useContext,useState,useEffect}from\"react\";import axios from\"axios\";export var CovidContext=createContext();export var CovidContextProvider=function CovidContextProvider(props){var _useState=useState('Global'),_useState2=_slicedToArray(_useState,2),country=_useState2[0],setChoosenCountry=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),covidData=_useState4[0],setCovidData=_useState4[1];// Fetch Covid Data\nfunction fetchData(){return _fetchData.apply(this,arguments);}function _fetchData(){_fetchData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(country===\"Global\")){_context.next=6;break;}_context.next=3;return axios.get(\"https://covid19.mathdro.id/api\");case 3:response=_context.sent;_context.next=9;break;case 6:_context.next=8;return axios.get(\"https://covid19.mathdro.id/api/countries/\".concat(country));case 8:response=_context.sent;case 9:setCovidData(response.data);case 10:case\"end\":return _context.stop();}}},_callee);}));return _fetchData.apply(this,arguments);}useEffect(function(){return fetchData();},[country]);// if (covidData === null) {\n//     return <h1>Loading here</h1>\n// }\nreturn/*#__PURE__*/React.createElement(CovidContext.Provider,{value:{country,setChoosenCountry,covidData}},props.children);};","map":{"version":3,"sources":["/home/fahad/reactProjects/CovidTracker/src/Context/CovidContext.js"],"names":["React","createContext","useContext","useState","useEffect","axios","CovidContext","CovidContextProvider","props","country","setChoosenCountry","covidData","setCovidData","fetchData","get","response","data","children"],"mappings":"odAAA,MAAOA,CAAAA,KAAP,EAAgBC,aAAhB,CAA+BC,UAA/B,CAA2CC,QAA3C,CAAqDC,SAArD,KAAsE,OAAtE,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAO,IAAMC,CAAAA,YAAY,CAAGL,aAAa,EAAlC,CAEP,MAAO,IAAMM,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAACC,KAAD,CAAW,eAENL,QAAQ,CAAC,QAAD,CAFF,wCAEpCM,OAFoC,eAE3BC,iBAF2B,8BAITP,QAAQ,EAJC,yCAIpCQ,SAJoC,eAIzBC,YAJyB,eAM3C;AAN2C,QAQ5BC,CAAAA,SAR4B,qIAQ3C,qJAIQJ,OAAO,GAAK,QAJpB,gDAKyBJ,CAAAA,KAAK,CAACS,GAAN,kCALzB,QAKQC,QALR,kEASyBV,CAAAA,KAAK,CAACS,GAAN,oDAAsDL,OAAtD,EATzB,QASQM,QATR,sBAWIH,YAAY,CAACG,QAAQ,CAACC,IAAV,CAAZ,CAXJ,uDAR2C,4CAyB3CZ,SAAS,CAAC,iBAAMS,CAAAA,SAAS,EAAf,EAAD,CAAoB,CAACJ,OAAD,CAApB,CAAT,CAEA;AACA;AACA;AAIA,mBACI,oBAAC,YAAD,CAAc,QAAd,EAAuB,KAAK,CAAE,CAAEA,OAAF,CAAWC,iBAAX,CAA8BC,SAA9B,CAA9B,EACKH,KAAK,CAACS,QADX,CADJ,CAKH,CAtCM","sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\"\nimport axios from \"axios\"\n\nexport const CovidContext = createContext();\n\nexport const CovidContextProvider = (props) => {\n\n    const [country, setChoosenCountry] = useState('Global');\n\n    const [covidData, setCovidData] = useState();\n\n    // Fetch Covid Data\n\n    async function fetchData() {\n\n        let response;\n\n        if (country === \"Global\") {\n            response = await axios.get(`https://covid19.mathdro.id/api`);\n\n        }\n        else {\n            response = await axios.get(`https://covid19.mathdro.id/api/countries/${country}`);\n        }\n        setCovidData(response.data);\n\n\n\n    }\n\n    useEffect(() => fetchData(), [country]);\n\n    // if (covidData === null) {\n    //     return <h1>Loading here</h1>\n    // }\n\n\n\n    return (\n        <CovidContext.Provider value={{ country, setChoosenCountry, covidData }}>\n            {props.children}\n        </CovidContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}